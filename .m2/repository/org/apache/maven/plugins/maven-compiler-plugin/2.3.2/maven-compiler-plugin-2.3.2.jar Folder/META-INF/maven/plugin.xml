<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>Maven Compiler Plugin</name>
  <description>The Compiler Plugin is used to compile the sources of your project.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-compiler-plugin</artifactId>
  <version>2.3.2</version>
  <goalPrefix>compiler</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-compiler-plugin.&lt;br/&gt; Call &lt;pre&gt;  mvn compiler:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/pre&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>compile</goal>
      <description>Compiles application sources</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>org.apache.maven.plugin.CompilerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>annotationProcessors</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
 Names of annotation processors to run. Only applies to JDK 1.6+
If not set, the default annotation processors discovery process applies.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory to run the compiler from if fork is true.</description>
        </parameter>
        <parameter>
          <name>buildDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The target directory of the compiler if fork is true.</description>
        </parameter>
        <parameter>
          <name>classpathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Project classpath.</description>
        </parameter>
        <parameter>
          <name>compileSourceRoots</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The source directories containing the sources to be compiled.</description>
        </parameter>
        <parameter>
          <name>compilerArgument</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted argument string to be passed to the compiler if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArguments</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler (prepending a dash) if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The compiler id of the compiler to use. See this
&lt;a href=&quot;non-javac-compilers.html&quot;&gt;guide&lt;/a&gt; for more information.</description>
        </parameter>
        <parameter>
          <name>compilerVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Version of the compiler to use, ex. &quot;1.3&quot;, &quot;1.5&quot;, if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>debug</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to include debugging information in the compiled class files.</description>
        </parameter>
        <parameter>
          <name>debuglevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Keyword list to be appended to the -g  command-line switch. Legal values are none or a comma-separated list of the following keywords: lines, vars, and source.
If debuglevel is not specified, by default, nothing will be appended to -g. If debug is not turned on, this attribute will be ignored.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -encoding argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of exclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>executable</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the executable of the compiler to use when fork is true.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation errors; defaults to true.</description>
        </parameter>
        <parameter>
          <name>fork</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows running the compiler in a separate process.
If &quot;false&quot; it uses the built in compiler, while if &quot;true&quot; it will use an executable.</description>
        </parameter>
        <parameter>
          <name>generatedSourcesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify where to place generated source files created by annotation processing.
Only applies to JDK 1.6+
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of inclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the maximum size, in megabytes, of the memory allocation pool, ex. &quot;128&quot;, &quot;128m&quot;
if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>meminitial</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Initial size, in megabytes, of the memory allocation pool, ex. &quot;64&quot;, &quot;64m&quot;
if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>optimize</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to optimize the compiled code using the compiler&apos;s optimization methods.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory for compiled classes.</description>
        </parameter>
        <parameter>
          <name>outputFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the output file when compiling a set of
sources to a single file.</description>
        </parameter>
        <parameter>
          <name>proc</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets whether annotation processing is performed or not. Only applies to JDK 1.6+
If not set, both compilation and annotation processing are performed at the same time.
&lt;/p&gt;
&lt;p&gt;
Allowed values are:
   none - no annotation processing is performed.
   only - only annotation processing is done, no compilation.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>projectArtifact</name>
          <type>org.apache.maven.artifact.Artifact</type>
          <required>true</required>
          <editable>false</editable>
          <description>Project artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current build session instance. This is used for
toolchain manager API calls.</description>
        </parameter>
        <parameter>
          <name>showDeprecation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether to show source locations where deprecated APIs are used.</description>
        </parameter>
        <parameter>
          <name>showWarnings</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to show compilation warnings.</description>
        </parameter>
        <parameter>
          <name>source</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>staleMillis</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the granularity in milliseconds of the last modification
date for testing whether a source needs recompilation.</description>
        </parameter>
        <parameter>
          <name>target</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to show messages about what the compiler is doing.</description>
        </parameter>
      </parameters>
      <configuration>
        <basedir implementation="java.io.File" default-value="${basedir}"/>
        <buildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <classpathElements implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <compileSourceRoots implementation="java.util.List" default-value="${project.compileSourceRoots}"/>
        <compilerId implementation="java.lang.String" default-value="javac">${maven.compiler.compilerId}</compilerId>
        <compilerVersion implementation="java.lang.String">${maven.compiler.compilerVersion}</compilerVersion>
        <debug implementation="boolean" default-value="true">${maven.compiler.debug}</debug>
        <debuglevel implementation="java.lang.String">${maven.compiler.debuglevel}</debuglevel>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <executable implementation="java.lang.String">${maven.compiler.executable}</executable>
        <failOnError implementation="boolean" default-value="true">${maven.compiler.failOnError}</failOnError>
        <fork implementation="boolean" default-value="false">${maven.compiler.fork}</fork>
        <generatedSourcesDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/annotations"/>
        <maxmem implementation="java.lang.String">${maven.compiler.maxmem}</maxmem>
        <meminitial implementation="java.lang.String">${maven.compiler.meminitial}</meminitial>
        <optimize implementation="boolean" default-value="false">${maven.compiler.optimize}</optimize>
        <outputDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <outputFileName implementation="java.lang.String">${project.build.finalName}</outputFileName>
        <projectArtifact implementation="org.apache.maven.artifact.Artifact" default-value="${project.artifact}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <showDeprecation implementation="boolean" default-value="false">${maven.compiler.showDeprecation}</showDeprecation>
        <showWarnings implementation="boolean" default-value="false">${maven.compiler.showWarnings}</showWarnings>
        <source implementation="java.lang.String" default-value="1.5">${maven.compiler.source}</source>
        <staleMillis implementation="int" default-value="0">${lastModGranularityMs}</staleMillis>
        <target implementation="java.lang.String" default-value="1.5">${maven.compiler.target}</target>
        <verbose implementation="boolean" default-value="false">${maven.compiler.verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.compiler.manager.CompilerManager</role>
          <field-name>compilerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>testCompile</goal>
      <description>Compiles application test sources.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test-compile</phase>
      <implementation>org.apache.maven.plugin.TestCompilerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>annotationProcessors</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
 Names of annotation processors to run. Only applies to JDK 1.6+
If not set, the default annotation processors discovery process applies.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory to run the compiler from if fork is true.</description>
        </parameter>
        <parameter>
          <name>buildDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The target directory of the compiler if fork is true.</description>
        </parameter>
        <parameter>
          <name>classpathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Project test classpath.</description>
        </parameter>
        <parameter>
          <name>compileSourceRoots</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The source directories containing the test-source to be compiled.</description>
        </parameter>
        <parameter>
          <name>compilerArgument</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted argument string to be passed to the compiler if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArguments</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler (prepending a dash) if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The compiler id of the compiler to use. See this
&lt;a href=&quot;non-javac-compilers.html&quot;&gt;guide&lt;/a&gt; for more information.</description>
        </parameter>
        <parameter>
          <name>compilerVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Version of the compiler to use, ex. &quot;1.3&quot;, &quot;1.5&quot;, if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>debug</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to include debugging information in the compiled class files.</description>
        </parameter>
        <parameter>
          <name>debuglevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Keyword list to be appended to the -g  command-line switch. Legal values are none or a comma-separated list of the following keywords: lines, vars, and source.
If debuglevel is not specified, by default, nothing will be appended to -g. If debug is not turned on, this attribute will be ignored.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -encoding argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>executable</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the executable of the compiler to use when fork is true.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation errors; defaults to true.</description>
        </parameter>
        <parameter>
          <name>fork</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows running the compiler in a separate process.
If &quot;false&quot; it uses the built in compiler, while if &quot;true&quot; it will use an executable.</description>
        </parameter>
        <parameter>
          <name>generatedTestSourcesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify where to place generated source files created by annotation processing.
Only applies to JDK 1.6+
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the maximum size, in megabytes, of the memory allocation pool, ex. &quot;128&quot;, &quot;128m&quot;
if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>meminitial</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Initial size, in megabytes, of the memory allocation pool, ex. &quot;64&quot;, &quot;64m&quot;
if fork is set to true.</description>
        </parameter>
        <parameter>
          <name>optimize</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to optimize the compiled code using the compiler&apos;s optimization methods.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory where compiled test classes go.</description>
        </parameter>
        <parameter>
          <name>outputFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the output file when compiling a set of
sources to a single file.</description>
        </parameter>
        <parameter>
          <name>proc</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets whether annotation processing is performed or not. Only applies to JDK 1.6+
If not set, both compilation and annotation processing are performed at the same time.
&lt;/p&gt;
&lt;p&gt;
Allowed values are:
   none - no annotation processing is performed.
   only - only annotation processing is done, no compilation.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current build session instance. This is used for
toolchain manager API calls.</description>
        </parameter>
        <parameter>
          <name>showDeprecation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether to show source locations where deprecated APIs are used.</description>
        </parameter>
        <parameter>
          <name>showWarnings</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to show compilation warnings.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass unit tests entirely.
Its use is NOT RECOMMENDED, but quite convenient on occasion.</description>
        </parameter>
        <parameter>
          <name>source</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>staleMillis</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the granularity in milliseconds of the last modification
date for testing whether a source needs recompilation.</description>
        </parameter>
        <parameter>
          <name>target</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>testCompilerArgument</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted argument string to be passed to test compiler if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>testCompilerArguments</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to test compiler (prepending a dash) if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>testExcludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of exclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>testIncludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of inclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>testSource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the test Java compiler.</description>
        </parameter>
        <parameter>
          <name>testTarget</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the test Java compiler.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to show messages about what the compiler is doing.</description>
        </parameter>
      </parameters>
      <configuration>
        <basedir implementation="java.io.File" default-value="${basedir}"/>
        <buildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <classpathElements implementation="java.util.List" default-value="${project.testClasspathElements}"/>
        <compileSourceRoots implementation="java.util.List" default-value="${project.testCompileSourceRoots}"/>
        <compilerId implementation="java.lang.String" default-value="javac">${maven.compiler.compilerId}</compilerId>
        <compilerVersion implementation="java.lang.String">${maven.compiler.compilerVersion}</compilerVersion>
        <debug implementation="boolean" default-value="true">${maven.compiler.debug}</debug>
        <debuglevel implementation="java.lang.String">${maven.compiler.debuglevel}</debuglevel>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <executable implementation="java.lang.String">${maven.compiler.executable}</executable>
        <failOnError implementation="boolean" default-value="true">${maven.compiler.failOnError}</failOnError>
        <fork implementation="boolean" default-value="false">${maven.compiler.fork}</fork>
        <generatedTestSourcesDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/test-annotations"/>
        <maxmem implementation="java.lang.String">${maven.compiler.maxmem}</maxmem>
        <meminitial implementation="java.lang.String">${maven.compiler.meminitial}</meminitial>
        <optimize implementation="boolean" default-value="false">${maven.compiler.optimize}</optimize>
        <outputDirectory implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <outputFileName implementation="java.lang.String">${project.build.finalName}</outputFileName>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <showDeprecation implementation="boolean" default-value="false">${maven.compiler.showDeprecation}</showDeprecation>
        <showWarnings implementation="boolean" default-value="false">${maven.compiler.showWarnings}</showWarnings>
        <skip implementation="boolean">${maven.test.skip}</skip>
        <source implementation="java.lang.String" default-value="1.5">${maven.compiler.source}</source>
        <staleMillis implementation="int" default-value="0">${lastModGranularityMs}</staleMillis>
        <target implementation="java.lang.String" default-value="1.5">${maven.compiler.target}</target>
        <testSource implementation="java.lang.String">${maven.compiler.testSource}</testSource>
        <testTarget implementation="java.lang.String">${maven.compiler.testTarget}</testTarget>
        <verbose implementation="boolean" default-value="false">${maven.compiler.verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.compiler.manager.CompilerManager</role>
          <field-name>compilerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>2.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-toolchain</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-api</artifactId>
      <type>jar</type>
      <version>1.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-manager</artifactId>
      <type>jar</type>
      <version>1.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-javac</artifactId>
      <type>jar</type>
      <version>1.8.1</version>
    </dependency>
  </dependencies>
</plugin>