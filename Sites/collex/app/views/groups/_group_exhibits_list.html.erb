<% # 
    # ------------------------------------------------------------------------
    # Copyright 2009 Applied Research in Patacriticism and the University of Virginia
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
  
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ---------------------------------------------------------------------------- -%>
<%# group_exhibits_list : parameters: ActiveRecord group, ActiveRecord cluster, int user_id -%>
<%# if cluster is nil, then this is the group page, otherwise it is the cluster page -%>
<% cluster ||= nil -%>
<script type="text/javascript">
<%
	curr_cluster_sort = session[:sort_cluster] ? session[:sort_cluster] : 'name'
	if group.show_exhibits != 'show_exhibits_only'
		if group.can_edit(user_id)
			clusters = Cluster.where({group_id: group.id})
		else
			clusters = Cluster.where({group_id: group.id, visibility: 'everyone'})
		end
		if curr_cluster_sort == 'name'
			clusters = clusters.sort { |a,b| a.name <=> b.name }
		else
			clusters = clusters.sort { |a,b| a.created_at <=> b.created_at }
		end
		cluster_options = []
		for clus in clusters
			cluster_options.push({ :text => clus.name, :value => clus.id })
		end
	else
		clusters = []
	end
-%>
	gClusterOptions = <%= raw(cluster_options.to_json()) %>;
	gNonClusteredExhibits = <%= raw(group.non_clustered_exhibits().to_json()) %>;
</script>
<% if group.can_edit(user_id) -%>
<div class="set_exhibit_style">
<% if cluster == nil -%>
	<span class="group_member_explanation">As an administrator for this group, you have the option to create a custom style for all <%= group.get_exhibits_label().pluralize().downcase() %> associated with your group. </span>
	<%= link_to_function("Click here to set a new style.", "new EditFontsDlg({ method: 'PUT', url: '/groups/#{group.id}' }, #{group.id}, gGroupData, 'group', true, 'group_details', #{group.group_type === 'peer-reviewed'})", { :class => 'modify_link' }) %>
	<ul>
<% if group.can_create_exhibit(user_id) -%>
		<li><%= link_to_function "Create an #{group.get_exhibits_label()}", "var dlg = new CreateNewExhibitWizard({ exhibit_label: '#{group.get_exhibits_label()}', group_id: #{group.id}, #{cluster != nil ? 'cluster_id: ' + cluster.id.to_s + ', ' : ''}progress_img: '#{image_path(PROGRESS_SPINNER_PATH)}', import_url: '/builder/import_exhibit', url_get_objects: '/builder/get_all_collected_objects', populate_collex_obj_url: '/forum/get_nines_obj_list_with_image'}); dlg.show();", :class => 'modify_link' %></li>
<% end # group.can_create_exhibit(user_id) -%>
		<li><%= link_to_function("Create a #{group.get_clusters_label()} of #{group.get_exhibits_label()}s", "new CreateNewClusterDlg('/clusters', #{group.id}, '#{group.name.gsub("'", "&apos;")}', #{group.group_type != 'classroom'}, 'group_exhibits_list', 'group_exhibits', '/forum/get_nines_obj_list', '#{image_path(PROGRESS_SPINNER_PATH)}', '#{group.get_clusters_label()}')", { :class => 'modify_link' }) %>&nbsp;
			<%= link_to_function("( what is this? )", "$('cluster_explanation').removeClassName('hidden'); $('cluster_what_is_this').addClassName('hidden');", { :class => 'modify_link what_is_this', :id => 'cluster_what_is_this' }) %>
			<span id="cluster_explanation" class="group_member_explanation hidden" ><%= group.get_clusters_label()%>s are a way to manage multiple <%= group.get_exhibits_label().pluralize().downcase() %> on similar topics. For example, the administrators of a Byron group might want to create <%= group.get_clusters_label()%>s for Poetry and Prose, or those using their accounts for teaching purposes might want to create separate <%= group.get_clusters_label()%>s for each class.
				<%= link_to_function("[hide this]", "$('cluster_explanation').addClassName('hidden'); $('cluster_what_is_this').removeClassName('hidden');", { :class => 'modify_link' }) %>
			</span>
		</li>
		<li><%= link_to_function("Change which #{group.get_exhibits_label()}s are shown", "changeWhichExhibitsAreShown(#{group.id}, gGroupData.show_exhibits, #{group.show_exhibits_to_json()}, #{group.show_exhibits_explanations_to_json()}, '#{group.get_exhibits_label()}');", { :class => 'modify_link' }) %></li>
	</ul>
<% else #if cluster == nil -%>
	<%= link_to_function("[move #{group.get_exhibits_label()} to #{group.get_clusters_label()}]", "moveExhibitToCluster('/clusters/move_exhibit', #{group.id}, #{cluster.id}, gNonClusteredExhibits, 'group_exhibits', '#{group.get_exhibits_label()}', '#{group.get_clusters_label()}')", { :class => 'modify_link' }) %>
<% end #if cluster == nil -%>
</div>
<% else # if group.can_edit(user_id) -%>
<% if group.can_create_exhibit(user_id) -%>
<div class="set_exhibit_style">
	<ul>
		<li><%= link_to_function "Create an #{group.get_exhibits_label()}", "var dlg = new CreateNewExhibitWizard({ exhibit_label: '#{group.get_exhibits_label()}', group_id: #{group.id}, #{cluster != nil ? 'cluster_id: ' + cluster.id.to_s + ', ' : ''}progress_img: '#{image_path(PROGRESS_SPINNER_PATH)}', import_url: '/builder/import_exhibit', url_get_objects: '/builder/get_all_collected_objects', populate_collex_obj_url: '/forum/get_nines_obj_list_with_image'}); dlg.show();", :class => 'modify_link' %></li>
	</ul>
</div>
<% end # if group.can_create_exhibit(user_id) -%>
<% end # if group.can_edit(user_id) -%>
<br />
	<div>
<% if cluster == nil -%>
<% if clusters.length > 0 %>
		<div><span class="group_details_label"><%= group.get_clusters_label() %>s: (<%= clusters.length %>)</span> | sort by:
			<%= make_select_control("cluster_sort", [ { :name => 'Date', :value => 'created_at'}, { :name => 'Title', :value => 'name'}], curr_cluster_sort, "serverAction({action:{actions: [ '/groups/sort_cluster' ], els: [ 'group_exhibits' ], params: { id: #{group.id}, sort: sel }}})") %>
		</div>
<% end # if clusters.length > 0 -%>
<% for clus in clusters -%>
	<%= render :partial => '/clusters/cluster_summary', :locals => { :group => group, :cluster => clus, :show_label => false } %>
<% end # for clus in clusters -%>
<% end # if cluster == nil -%>
<% if group.show_exhibits != 'show_clusters_only' -%>
<% if group.can_view_exhibits(user_id) -%>
<% curr_exhibit_sort = session[:sort_exhibit] ? session[:sort_exhibit] : 'title' -%>
<% exhibits = Exhibit.get_exhibits_in_group(group, cluster, user_id, curr_exhibit_sort) -%>

<% if exhibits.length > 0 -%>
	<div class="group_details_label"><%= group.get_exhibits_label() %>s: (<%= exhibits.length %>) | sort by:
		<% cluster_param = cluster ? ", cluster_id: #{cluster.id}" : "" %>
		<%= make_select_control("exhibit_sort", [ { :name => 'Date', :value => 'last_change'}, { :name => 'Title', :value => 'title'}, { :name => 'Author', :value => 'author'}], curr_exhibit_sort, 
			"serverAction({action:{actions: [ '/groups/sort_exhibits' ], els: [ 'group_exhibits' ], params: { id: #{group.id}#{cluster_param}, sort: sel }}, progress: { waitMessage: 'Sorting...'}})") %>
	</div>
<% end # if exhibits.length > 0 -%>
<% author_options_label = group.can_edit(user_id) ? 'Author options:' : '' -%>
<% for exhibit in exhibits -%>
<% if group.group_type == 'peer-reviewed' -%>
<span class="Z3988"
title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft_id=<%= request.protocol +  request.host_with_port + get_exhibit_url(exhibit) %>&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.genre=book&amp;rft.btitle=<%= CGI::escape(exhibit.title.gsub('&quot;', '"').gsub('&amp;', '&')) %>&amp;rft.title=<%= CGI::escape(exhibit.title.gsub('&quot;', '"').gsub('&amp;', '&')) %>&amp;rft.aulast=<%= CGI::escape(exhibit.get_apparent_author_name()) %>&amp;rft.aufirst=&amp;rft.au=<%= CGI::escape(exhibit.get_apparent_author_name()) %>&amp;rft.date=<%= CGI::escape(exhibit.updated_at.strftime('%Y')) %>">
&nbsp;
</span>
<% end # if peer-reviewed group -%>
		<div class='thumbnail_item<%= get_summary_header_class(exhibit) %>'>
		<%= get_summary_header_div(group, exhibit) %>
		<div class="left_thumbnail"><%= render :partial => '/exhibits/exhibit_thumbnail', :locals => { :exhibit => exhibit, :show_immediately => true } %></div>
		<div class="right_of_thumbnail exhibit_link">
			<% if Group.get_exhibit_visibility(exhibit) == 'everyone' -%>
			<div class="search_result_buttons">
				<%= result_button("Discuss", "discuss_#{exhibit.id}", "new StartDiscussionWithExhibit('/forum/get_all_topics', '/forum/post_object_to_new_thread', '#{exhibit.id}', '#{escape_apos(exhibit.title)}', 'discuss_#{exhibit.id}', #{user_signed_in? ? true : false}, '/forum/get_nines_obj_list', '#{image_path(PROGRESS_SPINNER_PATH)}', #{group.id}, #{cluster ? cluster.id : 'null'});", true) %>
			</div>
			<% end -%>
			<%= get_exhibit_link(exhibit) %>&nbsp;by
			<%= get_exhibit_user_link(exhibit) %>
			<% if Exhibit.can_edit(current_user, exhibit.id) -%>
				<br /><%= author_options_label %> <%= link_to("[edit this #{group.get_exhibits_label()}]", { :controller => 'builder', :action => 'show', :id => exhibit.id }, :class => 'nav_link' ) %>
			<% end %>
<% if group.can_edit(user_id) -%>
				<br />Group Administrator options:
			<%= link_to_function("[move #{group.get_exhibits_label()}]", "moveExhibit(#{exhibit.id}, gClusterOptions, #{group.id}, #{cluster ? cluster.id : 0}, '#{group.get_exhibits_label}');", { :class => 'nav_link' }) %>
			<%= link_to_function("[unpublish]", "unpublishExhibit(#{exhibit.id}, '#{exhibit.get_apparent_author_name()}', '#{exhibit.get_apparent_author_email()}', '#{group.get_exhibits_label}');", { :class => 'nav_link' }) %>
			<%= link_to_function("[limit to group only]", "limitExhibit(#{exhibit.id}, 'group', '#{group.get_exhibits_label}');", { :class => 'nav_link' }) if exhibit.editor_limit_visibility != 'group' && exhibit.is_published != 3 -%>
			<%= link_to_function("[allow publishing]", "unlimitExhibit(#{exhibit.id}, 'www', '#{group.get_exhibits_label}');", { :class => 'nav_link' }) if exhibit.editor_limit_visibility == 'group' -%>
<% if exhibit.is_published == 5 -%>
			<%= link_to_function("[accept]", "acceptAsPeerReviewed(#{exhibit.id}, gClusterOptions, '#{group.get_exhibits_label}', '#{group.get_clusters_label}', '#{exhibit.title.gsub("'", '&apos;')}', '#{get_exhibits_username(exhibit)}', '#{Setup.site_name()}', #{cluster ? cluster.id : 0}, '#{group.name}', '#{Group.visibility_to_friendly(group.exhibit_visibility)}', '#{get_exhibit_url(exhibit)}', '#{get_user_info_url(exhibit.get_apparent_author())}', '#{image_path(PROGRESS_SPINNER_PATH)}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
			<%= link_to_function("[revisions needed]", "rejectAsPeerReviewed(#{exhibit.id}, '#{exhibit.get_apparent_author_name()}', '#{exhibit.get_apparent_author_email()}', '#{group.get_exhibits_label}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
<% end # if is awaiting peer review -%>
<% end # if group.can_edit(user_id) -%>
		</div>
	</div>
<% end # for exhibit in exhibits -%>
<% end # if group.show_exhibits != 'show_clusters_only' -%>

<% pending_exhibits = Exhibit.get_pending_exhibits_in_group(group, cluster, user_id) -%>
<% if pending_exhibits.length > 0 -%>
	<div class="group_details_label">Pending <%= group.get_exhibits_label() %>s:</div>
<% for exhibit in pending_exhibits -%>
	<div class="thumbnail_item">
		<div class="left_thumbnail"><%= render :partial => '/exhibits/exhibit_thumbnail', :locals => { :exhibit => exhibit, :show_immediately => true } %></div>
		<div class="right_of_thumbnail exhibit_link"><%= get_exhibit_link(exhibit) %>&nbsp;by
			<%= get_exhibit_user_link(exhibit) %>
			<% if Exhibit.can_edit(current_user, exhibit.id) -%>
				| <%= link_to("[Edit this #{group.get_exhibits_label()}]", { :controller => 'builder', :action => 'show', :id => exhibit.id }, :class => 'nav_link' ) %>
			<% end -%>
			<%= link_to_function("[move #{group.get_exhibits_label}]", "moveExhibit(#{exhibit.id}, gClusterOptions, #{group.id}, #{cluster ? cluster.id : 0}, '#{group.get_exhibits_label}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
			<%= link_to_function("[accept]", "acceptAsPeerReviewed(#{exhibit.id}, gClusterOptions, '#{group.get_exhibits_label}', '#{group.get_clusters_label}', '#{exhibit.title.gsub("'", '&apos;')}', '#{get_exhibits_username(exhibit)}', '#{Setup.site_name()}', #{cluster ? cluster.id : 0}, '#{group.name}', '#{Group.visibility_to_friendly(group.exhibit_visibility)}', '#{get_exhibit_url(exhibit)}', '#{get_user_info_url(exhibit.get_apparent_author())}', '#{image_path(PROGRESS_SPINNER_PATH)}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
			<%= link_to_function("[revisions needed]", "rejectAsPeerReviewed(#{exhibit.id}, '#{exhibit.get_apparent_author_name()}', '#{exhibit.get_apparent_author_email()}', '#{group.get_exhibits_label}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
		</div>
	</div>
<% end # for exhibit in pending_exhibits -%>
<% end # if pending_exhibits.length > 0 -%>
<% end # if group.can_view_exhibits(user_id) -%>
<% if group.show_exhibits != 'show_clusters_only' -%>
<% if !group.can_view_exhibits(user_id) -%>
	<div class="empty_list_text" >You must be a member of this group to see its <%= group.get_exhibits_label %>s.</div>
<% elsif (!exhibits || exhibits.length == 0) && pending_exhibits.length == 0 && clusters.length == 0 -%>
	<div class="empty_list_text" >There have been no <%= group.get_exhibits_label %>s published in this <%= cluster == nil ? "group" : "cluster"  %>.</div>
<% end # if group.can_view_exhibits(user_id) -%>
<% end # if group.show_exhibits != 'show_clusters_only' -%>
	</div>
<% if COLLEX_PLUGINS['typewright'] %>
<div id="group_typewright" class='group_left_col'>
	<%= render :partial => '/typewright/widgets/group_documents', :locals => { } %>
</div>
<% end %>
<div class="clear_both">
	&nbsp;
</div>